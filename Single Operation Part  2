
Problem
Chef has the binary representation S of a number X with him. He can modify the number by applying the following operation exactly once:
Make X := =X ⊕ [X/2^y], where ( 1 ≤ Y ≤ ∣S∣ ) and ⊕ denotes the bitwise XOR operation.
Chef wants to minimize the value of X after performing the operation. Help Chef in determining the value of Y which will minimize the
value of X after the operation.

Input Format
The first line of input will contain a single integer T, denoting the number of test cases.
Each test case consists of two lines of inputs - the first containing the length of binary string S.
The second line of input contains the binary string S.

Output Format
For each test case, output on a new line, the value of Y which will maximize
the value of X after the operation.

Constraints
  •	1 ≤ T ≤ 5.10^4
  •	1 ≤ S ≤ 10^5
  •	The sum of |S| over all test cases won't exceed 5.10^5.
  •	S contains the characters 0 and 1 only.
  
Sample 1:
Input             Output
4                 2
2                 1
10                2
2                 1
11
3
101
3
110

Solution:
Language: C++17
Code: 

#include<bits/stdc++.h>
using namespace std;

int main(){
    int t; cin>>t; while(t--){
        int n , ans = 0;
        cin>>n;
        string m;
        cin>>m;
        for(int i = 0; i<n; i++){
            ans++;
            if(m[i+1]=='1')
                break;
        }
        cout<<ans<<endl;
    }
    return 0;
}
